#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5649736723393595680) {
   out_5649736723393595680[0] = 0;
   out_5649736723393595680[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5649736723393595680[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5649736723393595680[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5649736723393595680[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5649736723393595680[5] = -sin(in_vec[1]);
   out_5649736723393595680[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5649736723393595680[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5649736723393595680[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5649736723393595680[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5649736723393595680[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5649736723393595680[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5649736723393595680[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5649736723393595680[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5649736723393595680[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5649736723393595680[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5649736723393595680[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5649736723393595680[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1817682482156157428) {
   out_1817682482156157428[0] = delta_x[0] + nom_x[0];
   out_1817682482156157428[1] = delta_x[1] + nom_x[1];
   out_1817682482156157428[2] = delta_x[2] + nom_x[2];
   out_1817682482156157428[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1817682482156157428[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1817682482156157428[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1817682482156157428[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1817682482156157428[7] = delta_x[6] + nom_x[7];
   out_1817682482156157428[8] = delta_x[7] + nom_x[8];
   out_1817682482156157428[9] = delta_x[8] + nom_x[9];
   out_1817682482156157428[10] = delta_x[9] + nom_x[10];
   out_1817682482156157428[11] = delta_x[10] + nom_x[11];
   out_1817682482156157428[12] = delta_x[11] + nom_x[12];
   out_1817682482156157428[13] = delta_x[12] + nom_x[13];
   out_1817682482156157428[14] = delta_x[13] + nom_x[14];
   out_1817682482156157428[15] = delta_x[14] + nom_x[15];
   out_1817682482156157428[16] = delta_x[15] + nom_x[16];
   out_1817682482156157428[17] = delta_x[16] + nom_x[17];
   out_1817682482156157428[18] = delta_x[17] + nom_x[18];
   out_1817682482156157428[19] = delta_x[18] + nom_x[19];
   out_1817682482156157428[20] = delta_x[19] + nom_x[20];
   out_1817682482156157428[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2063642465723510922) {
   out_2063642465723510922[0] = -nom_x[0] + true_x[0];
   out_2063642465723510922[1] = -nom_x[1] + true_x[1];
   out_2063642465723510922[2] = -nom_x[2] + true_x[2];
   out_2063642465723510922[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2063642465723510922[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2063642465723510922[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2063642465723510922[6] = -nom_x[7] + true_x[7];
   out_2063642465723510922[7] = -nom_x[8] + true_x[8];
   out_2063642465723510922[8] = -nom_x[9] + true_x[9];
   out_2063642465723510922[9] = -nom_x[10] + true_x[10];
   out_2063642465723510922[10] = -nom_x[11] + true_x[11];
   out_2063642465723510922[11] = -nom_x[12] + true_x[12];
   out_2063642465723510922[12] = -nom_x[13] + true_x[13];
   out_2063642465723510922[13] = -nom_x[14] + true_x[14];
   out_2063642465723510922[14] = -nom_x[15] + true_x[15];
   out_2063642465723510922[15] = -nom_x[16] + true_x[16];
   out_2063642465723510922[16] = -nom_x[17] + true_x[17];
   out_2063642465723510922[17] = -nom_x[18] + true_x[18];
   out_2063642465723510922[18] = -nom_x[19] + true_x[19];
   out_2063642465723510922[19] = -nom_x[20] + true_x[20];
   out_2063642465723510922[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8875414428119132416) {
   out_8875414428119132416[0] = 1.0;
   out_8875414428119132416[1] = 0;
   out_8875414428119132416[2] = 0;
   out_8875414428119132416[3] = 0;
   out_8875414428119132416[4] = 0;
   out_8875414428119132416[5] = 0;
   out_8875414428119132416[6] = 0;
   out_8875414428119132416[7] = 0;
   out_8875414428119132416[8] = 0;
   out_8875414428119132416[9] = 0;
   out_8875414428119132416[10] = 0;
   out_8875414428119132416[11] = 0;
   out_8875414428119132416[12] = 0;
   out_8875414428119132416[13] = 0;
   out_8875414428119132416[14] = 0;
   out_8875414428119132416[15] = 0;
   out_8875414428119132416[16] = 0;
   out_8875414428119132416[17] = 0;
   out_8875414428119132416[18] = 0;
   out_8875414428119132416[19] = 0;
   out_8875414428119132416[20] = 0;
   out_8875414428119132416[21] = 0;
   out_8875414428119132416[22] = 1.0;
   out_8875414428119132416[23] = 0;
   out_8875414428119132416[24] = 0;
   out_8875414428119132416[25] = 0;
   out_8875414428119132416[26] = 0;
   out_8875414428119132416[27] = 0;
   out_8875414428119132416[28] = 0;
   out_8875414428119132416[29] = 0;
   out_8875414428119132416[30] = 0;
   out_8875414428119132416[31] = 0;
   out_8875414428119132416[32] = 0;
   out_8875414428119132416[33] = 0;
   out_8875414428119132416[34] = 0;
   out_8875414428119132416[35] = 0;
   out_8875414428119132416[36] = 0;
   out_8875414428119132416[37] = 0;
   out_8875414428119132416[38] = 0;
   out_8875414428119132416[39] = 0;
   out_8875414428119132416[40] = 0;
   out_8875414428119132416[41] = 0;
   out_8875414428119132416[42] = 0;
   out_8875414428119132416[43] = 0;
   out_8875414428119132416[44] = 1.0;
   out_8875414428119132416[45] = 0;
   out_8875414428119132416[46] = 0;
   out_8875414428119132416[47] = 0;
   out_8875414428119132416[48] = 0;
   out_8875414428119132416[49] = 0;
   out_8875414428119132416[50] = 0;
   out_8875414428119132416[51] = 0;
   out_8875414428119132416[52] = 0;
   out_8875414428119132416[53] = 0;
   out_8875414428119132416[54] = 0;
   out_8875414428119132416[55] = 0;
   out_8875414428119132416[56] = 0;
   out_8875414428119132416[57] = 0;
   out_8875414428119132416[58] = 0;
   out_8875414428119132416[59] = 0;
   out_8875414428119132416[60] = 0;
   out_8875414428119132416[61] = 0;
   out_8875414428119132416[62] = 0;
   out_8875414428119132416[63] = 0;
   out_8875414428119132416[64] = 0;
   out_8875414428119132416[65] = 0;
   out_8875414428119132416[66] = -0.5*state[4];
   out_8875414428119132416[67] = -0.5*state[5];
   out_8875414428119132416[68] = -0.5*state[6];
   out_8875414428119132416[69] = 0;
   out_8875414428119132416[70] = 0;
   out_8875414428119132416[71] = 0;
   out_8875414428119132416[72] = 0;
   out_8875414428119132416[73] = 0;
   out_8875414428119132416[74] = 0;
   out_8875414428119132416[75] = 0;
   out_8875414428119132416[76] = 0;
   out_8875414428119132416[77] = 0;
   out_8875414428119132416[78] = 0;
   out_8875414428119132416[79] = 0;
   out_8875414428119132416[80] = 0;
   out_8875414428119132416[81] = 0;
   out_8875414428119132416[82] = 0;
   out_8875414428119132416[83] = 0;
   out_8875414428119132416[84] = 0;
   out_8875414428119132416[85] = 0;
   out_8875414428119132416[86] = 0;
   out_8875414428119132416[87] = 0.5*state[3];
   out_8875414428119132416[88] = 0.5*state[6];
   out_8875414428119132416[89] = -0.5*state[5];
   out_8875414428119132416[90] = 0;
   out_8875414428119132416[91] = 0;
   out_8875414428119132416[92] = 0;
   out_8875414428119132416[93] = 0;
   out_8875414428119132416[94] = 0;
   out_8875414428119132416[95] = 0;
   out_8875414428119132416[96] = 0;
   out_8875414428119132416[97] = 0;
   out_8875414428119132416[98] = 0;
   out_8875414428119132416[99] = 0;
   out_8875414428119132416[100] = 0;
   out_8875414428119132416[101] = 0;
   out_8875414428119132416[102] = 0;
   out_8875414428119132416[103] = 0;
   out_8875414428119132416[104] = 0;
   out_8875414428119132416[105] = 0;
   out_8875414428119132416[106] = 0;
   out_8875414428119132416[107] = 0;
   out_8875414428119132416[108] = -0.5*state[6];
   out_8875414428119132416[109] = 0.5*state[3];
   out_8875414428119132416[110] = 0.5*state[4];
   out_8875414428119132416[111] = 0;
   out_8875414428119132416[112] = 0;
   out_8875414428119132416[113] = 0;
   out_8875414428119132416[114] = 0;
   out_8875414428119132416[115] = 0;
   out_8875414428119132416[116] = 0;
   out_8875414428119132416[117] = 0;
   out_8875414428119132416[118] = 0;
   out_8875414428119132416[119] = 0;
   out_8875414428119132416[120] = 0;
   out_8875414428119132416[121] = 0;
   out_8875414428119132416[122] = 0;
   out_8875414428119132416[123] = 0;
   out_8875414428119132416[124] = 0;
   out_8875414428119132416[125] = 0;
   out_8875414428119132416[126] = 0;
   out_8875414428119132416[127] = 0;
   out_8875414428119132416[128] = 0;
   out_8875414428119132416[129] = 0.5*state[5];
   out_8875414428119132416[130] = -0.5*state[4];
   out_8875414428119132416[131] = 0.5*state[3];
   out_8875414428119132416[132] = 0;
   out_8875414428119132416[133] = 0;
   out_8875414428119132416[134] = 0;
   out_8875414428119132416[135] = 0;
   out_8875414428119132416[136] = 0;
   out_8875414428119132416[137] = 0;
   out_8875414428119132416[138] = 0;
   out_8875414428119132416[139] = 0;
   out_8875414428119132416[140] = 0;
   out_8875414428119132416[141] = 0;
   out_8875414428119132416[142] = 0;
   out_8875414428119132416[143] = 0;
   out_8875414428119132416[144] = 0;
   out_8875414428119132416[145] = 0;
   out_8875414428119132416[146] = 0;
   out_8875414428119132416[147] = 0;
   out_8875414428119132416[148] = 0;
   out_8875414428119132416[149] = 0;
   out_8875414428119132416[150] = 0;
   out_8875414428119132416[151] = 0;
   out_8875414428119132416[152] = 0;
   out_8875414428119132416[153] = 1.0;
   out_8875414428119132416[154] = 0;
   out_8875414428119132416[155] = 0;
   out_8875414428119132416[156] = 0;
   out_8875414428119132416[157] = 0;
   out_8875414428119132416[158] = 0;
   out_8875414428119132416[159] = 0;
   out_8875414428119132416[160] = 0;
   out_8875414428119132416[161] = 0;
   out_8875414428119132416[162] = 0;
   out_8875414428119132416[163] = 0;
   out_8875414428119132416[164] = 0;
   out_8875414428119132416[165] = 0;
   out_8875414428119132416[166] = 0;
   out_8875414428119132416[167] = 0;
   out_8875414428119132416[168] = 0;
   out_8875414428119132416[169] = 0;
   out_8875414428119132416[170] = 0;
   out_8875414428119132416[171] = 0;
   out_8875414428119132416[172] = 0;
   out_8875414428119132416[173] = 0;
   out_8875414428119132416[174] = 0;
   out_8875414428119132416[175] = 1.0;
   out_8875414428119132416[176] = 0;
   out_8875414428119132416[177] = 0;
   out_8875414428119132416[178] = 0;
   out_8875414428119132416[179] = 0;
   out_8875414428119132416[180] = 0;
   out_8875414428119132416[181] = 0;
   out_8875414428119132416[182] = 0;
   out_8875414428119132416[183] = 0;
   out_8875414428119132416[184] = 0;
   out_8875414428119132416[185] = 0;
   out_8875414428119132416[186] = 0;
   out_8875414428119132416[187] = 0;
   out_8875414428119132416[188] = 0;
   out_8875414428119132416[189] = 0;
   out_8875414428119132416[190] = 0;
   out_8875414428119132416[191] = 0;
   out_8875414428119132416[192] = 0;
   out_8875414428119132416[193] = 0;
   out_8875414428119132416[194] = 0;
   out_8875414428119132416[195] = 0;
   out_8875414428119132416[196] = 0;
   out_8875414428119132416[197] = 1.0;
   out_8875414428119132416[198] = 0;
   out_8875414428119132416[199] = 0;
   out_8875414428119132416[200] = 0;
   out_8875414428119132416[201] = 0;
   out_8875414428119132416[202] = 0;
   out_8875414428119132416[203] = 0;
   out_8875414428119132416[204] = 0;
   out_8875414428119132416[205] = 0;
   out_8875414428119132416[206] = 0;
   out_8875414428119132416[207] = 0;
   out_8875414428119132416[208] = 0;
   out_8875414428119132416[209] = 0;
   out_8875414428119132416[210] = 0;
   out_8875414428119132416[211] = 0;
   out_8875414428119132416[212] = 0;
   out_8875414428119132416[213] = 0;
   out_8875414428119132416[214] = 0;
   out_8875414428119132416[215] = 0;
   out_8875414428119132416[216] = 0;
   out_8875414428119132416[217] = 0;
   out_8875414428119132416[218] = 0;
   out_8875414428119132416[219] = 1.0;
   out_8875414428119132416[220] = 0;
   out_8875414428119132416[221] = 0;
   out_8875414428119132416[222] = 0;
   out_8875414428119132416[223] = 0;
   out_8875414428119132416[224] = 0;
   out_8875414428119132416[225] = 0;
   out_8875414428119132416[226] = 0;
   out_8875414428119132416[227] = 0;
   out_8875414428119132416[228] = 0;
   out_8875414428119132416[229] = 0;
   out_8875414428119132416[230] = 0;
   out_8875414428119132416[231] = 0;
   out_8875414428119132416[232] = 0;
   out_8875414428119132416[233] = 0;
   out_8875414428119132416[234] = 0;
   out_8875414428119132416[235] = 0;
   out_8875414428119132416[236] = 0;
   out_8875414428119132416[237] = 0;
   out_8875414428119132416[238] = 0;
   out_8875414428119132416[239] = 0;
   out_8875414428119132416[240] = 0;
   out_8875414428119132416[241] = 1.0;
   out_8875414428119132416[242] = 0;
   out_8875414428119132416[243] = 0;
   out_8875414428119132416[244] = 0;
   out_8875414428119132416[245] = 0;
   out_8875414428119132416[246] = 0;
   out_8875414428119132416[247] = 0;
   out_8875414428119132416[248] = 0;
   out_8875414428119132416[249] = 0;
   out_8875414428119132416[250] = 0;
   out_8875414428119132416[251] = 0;
   out_8875414428119132416[252] = 0;
   out_8875414428119132416[253] = 0;
   out_8875414428119132416[254] = 0;
   out_8875414428119132416[255] = 0;
   out_8875414428119132416[256] = 0;
   out_8875414428119132416[257] = 0;
   out_8875414428119132416[258] = 0;
   out_8875414428119132416[259] = 0;
   out_8875414428119132416[260] = 0;
   out_8875414428119132416[261] = 0;
   out_8875414428119132416[262] = 0;
   out_8875414428119132416[263] = 1.0;
   out_8875414428119132416[264] = 0;
   out_8875414428119132416[265] = 0;
   out_8875414428119132416[266] = 0;
   out_8875414428119132416[267] = 0;
   out_8875414428119132416[268] = 0;
   out_8875414428119132416[269] = 0;
   out_8875414428119132416[270] = 0;
   out_8875414428119132416[271] = 0;
   out_8875414428119132416[272] = 0;
   out_8875414428119132416[273] = 0;
   out_8875414428119132416[274] = 0;
   out_8875414428119132416[275] = 0;
   out_8875414428119132416[276] = 0;
   out_8875414428119132416[277] = 0;
   out_8875414428119132416[278] = 0;
   out_8875414428119132416[279] = 0;
   out_8875414428119132416[280] = 0;
   out_8875414428119132416[281] = 0;
   out_8875414428119132416[282] = 0;
   out_8875414428119132416[283] = 0;
   out_8875414428119132416[284] = 0;
   out_8875414428119132416[285] = 1.0;
   out_8875414428119132416[286] = 0;
   out_8875414428119132416[287] = 0;
   out_8875414428119132416[288] = 0;
   out_8875414428119132416[289] = 0;
   out_8875414428119132416[290] = 0;
   out_8875414428119132416[291] = 0;
   out_8875414428119132416[292] = 0;
   out_8875414428119132416[293] = 0;
   out_8875414428119132416[294] = 0;
   out_8875414428119132416[295] = 0;
   out_8875414428119132416[296] = 0;
   out_8875414428119132416[297] = 0;
   out_8875414428119132416[298] = 0;
   out_8875414428119132416[299] = 0;
   out_8875414428119132416[300] = 0;
   out_8875414428119132416[301] = 0;
   out_8875414428119132416[302] = 0;
   out_8875414428119132416[303] = 0;
   out_8875414428119132416[304] = 0;
   out_8875414428119132416[305] = 0;
   out_8875414428119132416[306] = 0;
   out_8875414428119132416[307] = 1.0;
   out_8875414428119132416[308] = 0;
   out_8875414428119132416[309] = 0;
   out_8875414428119132416[310] = 0;
   out_8875414428119132416[311] = 0;
   out_8875414428119132416[312] = 0;
   out_8875414428119132416[313] = 0;
   out_8875414428119132416[314] = 0;
   out_8875414428119132416[315] = 0;
   out_8875414428119132416[316] = 0;
   out_8875414428119132416[317] = 0;
   out_8875414428119132416[318] = 0;
   out_8875414428119132416[319] = 0;
   out_8875414428119132416[320] = 0;
   out_8875414428119132416[321] = 0;
   out_8875414428119132416[322] = 0;
   out_8875414428119132416[323] = 0;
   out_8875414428119132416[324] = 0;
   out_8875414428119132416[325] = 0;
   out_8875414428119132416[326] = 0;
   out_8875414428119132416[327] = 0;
   out_8875414428119132416[328] = 0;
   out_8875414428119132416[329] = 1.0;
   out_8875414428119132416[330] = 0;
   out_8875414428119132416[331] = 0;
   out_8875414428119132416[332] = 0;
   out_8875414428119132416[333] = 0;
   out_8875414428119132416[334] = 0;
   out_8875414428119132416[335] = 0;
   out_8875414428119132416[336] = 0;
   out_8875414428119132416[337] = 0;
   out_8875414428119132416[338] = 0;
   out_8875414428119132416[339] = 0;
   out_8875414428119132416[340] = 0;
   out_8875414428119132416[341] = 0;
   out_8875414428119132416[342] = 0;
   out_8875414428119132416[343] = 0;
   out_8875414428119132416[344] = 0;
   out_8875414428119132416[345] = 0;
   out_8875414428119132416[346] = 0;
   out_8875414428119132416[347] = 0;
   out_8875414428119132416[348] = 0;
   out_8875414428119132416[349] = 0;
   out_8875414428119132416[350] = 0;
   out_8875414428119132416[351] = 1.0;
   out_8875414428119132416[352] = 0;
   out_8875414428119132416[353] = 0;
   out_8875414428119132416[354] = 0;
   out_8875414428119132416[355] = 0;
   out_8875414428119132416[356] = 0;
   out_8875414428119132416[357] = 0;
   out_8875414428119132416[358] = 0;
   out_8875414428119132416[359] = 0;
   out_8875414428119132416[360] = 0;
   out_8875414428119132416[361] = 0;
   out_8875414428119132416[362] = 0;
   out_8875414428119132416[363] = 0;
   out_8875414428119132416[364] = 0;
   out_8875414428119132416[365] = 0;
   out_8875414428119132416[366] = 0;
   out_8875414428119132416[367] = 0;
   out_8875414428119132416[368] = 0;
   out_8875414428119132416[369] = 0;
   out_8875414428119132416[370] = 0;
   out_8875414428119132416[371] = 0;
   out_8875414428119132416[372] = 0;
   out_8875414428119132416[373] = 1.0;
   out_8875414428119132416[374] = 0;
   out_8875414428119132416[375] = 0;
   out_8875414428119132416[376] = 0;
   out_8875414428119132416[377] = 0;
   out_8875414428119132416[378] = 0;
   out_8875414428119132416[379] = 0;
   out_8875414428119132416[380] = 0;
   out_8875414428119132416[381] = 0;
   out_8875414428119132416[382] = 0;
   out_8875414428119132416[383] = 0;
   out_8875414428119132416[384] = 0;
   out_8875414428119132416[385] = 0;
   out_8875414428119132416[386] = 0;
   out_8875414428119132416[387] = 0;
   out_8875414428119132416[388] = 0;
   out_8875414428119132416[389] = 0;
   out_8875414428119132416[390] = 0;
   out_8875414428119132416[391] = 0;
   out_8875414428119132416[392] = 0;
   out_8875414428119132416[393] = 0;
   out_8875414428119132416[394] = 0;
   out_8875414428119132416[395] = 1.0;
   out_8875414428119132416[396] = 0;
   out_8875414428119132416[397] = 0;
   out_8875414428119132416[398] = 0;
   out_8875414428119132416[399] = 0;
   out_8875414428119132416[400] = 0;
   out_8875414428119132416[401] = 0;
   out_8875414428119132416[402] = 0;
   out_8875414428119132416[403] = 0;
   out_8875414428119132416[404] = 0;
   out_8875414428119132416[405] = 0;
   out_8875414428119132416[406] = 0;
   out_8875414428119132416[407] = 0;
   out_8875414428119132416[408] = 0;
   out_8875414428119132416[409] = 0;
   out_8875414428119132416[410] = 0;
   out_8875414428119132416[411] = 0;
   out_8875414428119132416[412] = 0;
   out_8875414428119132416[413] = 0;
   out_8875414428119132416[414] = 0;
   out_8875414428119132416[415] = 0;
   out_8875414428119132416[416] = 0;
   out_8875414428119132416[417] = 1.0;
   out_8875414428119132416[418] = 0;
   out_8875414428119132416[419] = 0;
   out_8875414428119132416[420] = 0;
   out_8875414428119132416[421] = 0;
   out_8875414428119132416[422] = 0;
   out_8875414428119132416[423] = 0;
   out_8875414428119132416[424] = 0;
   out_8875414428119132416[425] = 0;
   out_8875414428119132416[426] = 0;
   out_8875414428119132416[427] = 0;
   out_8875414428119132416[428] = 0;
   out_8875414428119132416[429] = 0;
   out_8875414428119132416[430] = 0;
   out_8875414428119132416[431] = 0;
   out_8875414428119132416[432] = 0;
   out_8875414428119132416[433] = 0;
   out_8875414428119132416[434] = 0;
   out_8875414428119132416[435] = 0;
   out_8875414428119132416[436] = 0;
   out_8875414428119132416[437] = 0;
   out_8875414428119132416[438] = 0;
   out_8875414428119132416[439] = 1.0;
   out_8875414428119132416[440] = 0;
   out_8875414428119132416[441] = 0;
   out_8875414428119132416[442] = 0;
   out_8875414428119132416[443] = 0;
   out_8875414428119132416[444] = 0;
   out_8875414428119132416[445] = 0;
   out_8875414428119132416[446] = 0;
   out_8875414428119132416[447] = 0;
   out_8875414428119132416[448] = 0;
   out_8875414428119132416[449] = 0;
   out_8875414428119132416[450] = 0;
   out_8875414428119132416[451] = 0;
   out_8875414428119132416[452] = 0;
   out_8875414428119132416[453] = 0;
   out_8875414428119132416[454] = 0;
   out_8875414428119132416[455] = 0;
   out_8875414428119132416[456] = 0;
   out_8875414428119132416[457] = 0;
   out_8875414428119132416[458] = 0;
   out_8875414428119132416[459] = 0;
   out_8875414428119132416[460] = 0;
   out_8875414428119132416[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4816933065227157419) {
   out_4816933065227157419[0] = dt*state[7] + state[0];
   out_4816933065227157419[1] = dt*state[8] + state[1];
   out_4816933065227157419[2] = dt*state[9] + state[2];
   out_4816933065227157419[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4816933065227157419[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4816933065227157419[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4816933065227157419[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4816933065227157419[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4816933065227157419[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4816933065227157419[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4816933065227157419[10] = state[10];
   out_4816933065227157419[11] = state[11];
   out_4816933065227157419[12] = state[12];
   out_4816933065227157419[13] = state[13];
   out_4816933065227157419[14] = state[14];
   out_4816933065227157419[15] = state[15];
   out_4816933065227157419[16] = state[16];
   out_4816933065227157419[17] = state[17];
   out_4816933065227157419[18] = state[18];
   out_4816933065227157419[19] = state[19];
   out_4816933065227157419[20] = state[20];
   out_4816933065227157419[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8784471241999669549) {
   out_8784471241999669549[0] = 1;
   out_8784471241999669549[1] = 0;
   out_8784471241999669549[2] = 0;
   out_8784471241999669549[3] = 0;
   out_8784471241999669549[4] = 0;
   out_8784471241999669549[5] = 0;
   out_8784471241999669549[6] = dt;
   out_8784471241999669549[7] = 0;
   out_8784471241999669549[8] = 0;
   out_8784471241999669549[9] = 0;
   out_8784471241999669549[10] = 0;
   out_8784471241999669549[11] = 0;
   out_8784471241999669549[12] = 0;
   out_8784471241999669549[13] = 0;
   out_8784471241999669549[14] = 0;
   out_8784471241999669549[15] = 0;
   out_8784471241999669549[16] = 0;
   out_8784471241999669549[17] = 0;
   out_8784471241999669549[18] = 0;
   out_8784471241999669549[19] = 0;
   out_8784471241999669549[20] = 0;
   out_8784471241999669549[21] = 0;
   out_8784471241999669549[22] = 1;
   out_8784471241999669549[23] = 0;
   out_8784471241999669549[24] = 0;
   out_8784471241999669549[25] = 0;
   out_8784471241999669549[26] = 0;
   out_8784471241999669549[27] = 0;
   out_8784471241999669549[28] = dt;
   out_8784471241999669549[29] = 0;
   out_8784471241999669549[30] = 0;
   out_8784471241999669549[31] = 0;
   out_8784471241999669549[32] = 0;
   out_8784471241999669549[33] = 0;
   out_8784471241999669549[34] = 0;
   out_8784471241999669549[35] = 0;
   out_8784471241999669549[36] = 0;
   out_8784471241999669549[37] = 0;
   out_8784471241999669549[38] = 0;
   out_8784471241999669549[39] = 0;
   out_8784471241999669549[40] = 0;
   out_8784471241999669549[41] = 0;
   out_8784471241999669549[42] = 0;
   out_8784471241999669549[43] = 0;
   out_8784471241999669549[44] = 1;
   out_8784471241999669549[45] = 0;
   out_8784471241999669549[46] = 0;
   out_8784471241999669549[47] = 0;
   out_8784471241999669549[48] = 0;
   out_8784471241999669549[49] = 0;
   out_8784471241999669549[50] = dt;
   out_8784471241999669549[51] = 0;
   out_8784471241999669549[52] = 0;
   out_8784471241999669549[53] = 0;
   out_8784471241999669549[54] = 0;
   out_8784471241999669549[55] = 0;
   out_8784471241999669549[56] = 0;
   out_8784471241999669549[57] = 0;
   out_8784471241999669549[58] = 0;
   out_8784471241999669549[59] = 0;
   out_8784471241999669549[60] = 0;
   out_8784471241999669549[61] = 0;
   out_8784471241999669549[62] = 0;
   out_8784471241999669549[63] = 0;
   out_8784471241999669549[64] = 0;
   out_8784471241999669549[65] = 0;
   out_8784471241999669549[66] = 1;
   out_8784471241999669549[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8784471241999669549[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8784471241999669549[69] = 0;
   out_8784471241999669549[70] = 0;
   out_8784471241999669549[71] = 0;
   out_8784471241999669549[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8784471241999669549[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8784471241999669549[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8784471241999669549[75] = 0;
   out_8784471241999669549[76] = 0;
   out_8784471241999669549[77] = 0;
   out_8784471241999669549[78] = 0;
   out_8784471241999669549[79] = 0;
   out_8784471241999669549[80] = 0;
   out_8784471241999669549[81] = 0;
   out_8784471241999669549[82] = 0;
   out_8784471241999669549[83] = 0;
   out_8784471241999669549[84] = 0;
   out_8784471241999669549[85] = 0;
   out_8784471241999669549[86] = 0;
   out_8784471241999669549[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8784471241999669549[88] = 1;
   out_8784471241999669549[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8784471241999669549[90] = 0;
   out_8784471241999669549[91] = 0;
   out_8784471241999669549[92] = 0;
   out_8784471241999669549[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8784471241999669549[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8784471241999669549[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8784471241999669549[96] = 0;
   out_8784471241999669549[97] = 0;
   out_8784471241999669549[98] = 0;
   out_8784471241999669549[99] = 0;
   out_8784471241999669549[100] = 0;
   out_8784471241999669549[101] = 0;
   out_8784471241999669549[102] = 0;
   out_8784471241999669549[103] = 0;
   out_8784471241999669549[104] = 0;
   out_8784471241999669549[105] = 0;
   out_8784471241999669549[106] = 0;
   out_8784471241999669549[107] = 0;
   out_8784471241999669549[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8784471241999669549[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8784471241999669549[110] = 1;
   out_8784471241999669549[111] = 0;
   out_8784471241999669549[112] = 0;
   out_8784471241999669549[113] = 0;
   out_8784471241999669549[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8784471241999669549[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8784471241999669549[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8784471241999669549[117] = 0;
   out_8784471241999669549[118] = 0;
   out_8784471241999669549[119] = 0;
   out_8784471241999669549[120] = 0;
   out_8784471241999669549[121] = 0;
   out_8784471241999669549[122] = 0;
   out_8784471241999669549[123] = 0;
   out_8784471241999669549[124] = 0;
   out_8784471241999669549[125] = 0;
   out_8784471241999669549[126] = 0;
   out_8784471241999669549[127] = 0;
   out_8784471241999669549[128] = 0;
   out_8784471241999669549[129] = 0;
   out_8784471241999669549[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8784471241999669549[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8784471241999669549[132] = 1;
   out_8784471241999669549[133] = 0;
   out_8784471241999669549[134] = 0;
   out_8784471241999669549[135] = 0;
   out_8784471241999669549[136] = 0;
   out_8784471241999669549[137] = 0;
   out_8784471241999669549[138] = 0;
   out_8784471241999669549[139] = 0;
   out_8784471241999669549[140] = 0;
   out_8784471241999669549[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8784471241999669549[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8784471241999669549[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8784471241999669549[144] = 0;
   out_8784471241999669549[145] = 0;
   out_8784471241999669549[146] = 0;
   out_8784471241999669549[147] = 0;
   out_8784471241999669549[148] = 0;
   out_8784471241999669549[149] = 0;
   out_8784471241999669549[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8784471241999669549[151] = 0;
   out_8784471241999669549[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8784471241999669549[153] = 0;
   out_8784471241999669549[154] = 1;
   out_8784471241999669549[155] = 0;
   out_8784471241999669549[156] = 0;
   out_8784471241999669549[157] = 0;
   out_8784471241999669549[158] = 0;
   out_8784471241999669549[159] = 0;
   out_8784471241999669549[160] = 0;
   out_8784471241999669549[161] = 0;
   out_8784471241999669549[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8784471241999669549[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8784471241999669549[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8784471241999669549[165] = 0;
   out_8784471241999669549[166] = 0;
   out_8784471241999669549[167] = 0;
   out_8784471241999669549[168] = 0;
   out_8784471241999669549[169] = 0;
   out_8784471241999669549[170] = 0;
   out_8784471241999669549[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8784471241999669549[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8784471241999669549[173] = 0;
   out_8784471241999669549[174] = 0;
   out_8784471241999669549[175] = 0;
   out_8784471241999669549[176] = 1;
   out_8784471241999669549[177] = 0;
   out_8784471241999669549[178] = 0;
   out_8784471241999669549[179] = 0;
   out_8784471241999669549[180] = 0;
   out_8784471241999669549[181] = 0;
   out_8784471241999669549[182] = 0;
   out_8784471241999669549[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8784471241999669549[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8784471241999669549[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8784471241999669549[186] = 0;
   out_8784471241999669549[187] = 0;
   out_8784471241999669549[188] = 0;
   out_8784471241999669549[189] = 0;
   out_8784471241999669549[190] = 0;
   out_8784471241999669549[191] = 0;
   out_8784471241999669549[192] = 0;
   out_8784471241999669549[193] = 0;
   out_8784471241999669549[194] = 0;
   out_8784471241999669549[195] = 0;
   out_8784471241999669549[196] = 0;
   out_8784471241999669549[197] = 0;
   out_8784471241999669549[198] = 1;
   out_8784471241999669549[199] = 0;
   out_8784471241999669549[200] = 0;
   out_8784471241999669549[201] = 0;
   out_8784471241999669549[202] = 0;
   out_8784471241999669549[203] = 0;
   out_8784471241999669549[204] = 0;
   out_8784471241999669549[205] = 0;
   out_8784471241999669549[206] = 0;
   out_8784471241999669549[207] = 0;
   out_8784471241999669549[208] = 0;
   out_8784471241999669549[209] = 0;
   out_8784471241999669549[210] = 0;
   out_8784471241999669549[211] = 0;
   out_8784471241999669549[212] = 0;
   out_8784471241999669549[213] = 0;
   out_8784471241999669549[214] = 0;
   out_8784471241999669549[215] = 0;
   out_8784471241999669549[216] = 0;
   out_8784471241999669549[217] = 0;
   out_8784471241999669549[218] = 0;
   out_8784471241999669549[219] = 0;
   out_8784471241999669549[220] = 1;
   out_8784471241999669549[221] = 0;
   out_8784471241999669549[222] = 0;
   out_8784471241999669549[223] = 0;
   out_8784471241999669549[224] = 0;
   out_8784471241999669549[225] = 0;
   out_8784471241999669549[226] = 0;
   out_8784471241999669549[227] = 0;
   out_8784471241999669549[228] = 0;
   out_8784471241999669549[229] = 0;
   out_8784471241999669549[230] = 0;
   out_8784471241999669549[231] = 0;
   out_8784471241999669549[232] = 0;
   out_8784471241999669549[233] = 0;
   out_8784471241999669549[234] = 0;
   out_8784471241999669549[235] = 0;
   out_8784471241999669549[236] = 0;
   out_8784471241999669549[237] = 0;
   out_8784471241999669549[238] = 0;
   out_8784471241999669549[239] = 0;
   out_8784471241999669549[240] = 0;
   out_8784471241999669549[241] = 0;
   out_8784471241999669549[242] = 1;
   out_8784471241999669549[243] = 0;
   out_8784471241999669549[244] = 0;
   out_8784471241999669549[245] = 0;
   out_8784471241999669549[246] = 0;
   out_8784471241999669549[247] = 0;
   out_8784471241999669549[248] = 0;
   out_8784471241999669549[249] = 0;
   out_8784471241999669549[250] = 0;
   out_8784471241999669549[251] = 0;
   out_8784471241999669549[252] = 0;
   out_8784471241999669549[253] = 0;
   out_8784471241999669549[254] = 0;
   out_8784471241999669549[255] = 0;
   out_8784471241999669549[256] = 0;
   out_8784471241999669549[257] = 0;
   out_8784471241999669549[258] = 0;
   out_8784471241999669549[259] = 0;
   out_8784471241999669549[260] = 0;
   out_8784471241999669549[261] = 0;
   out_8784471241999669549[262] = 0;
   out_8784471241999669549[263] = 0;
   out_8784471241999669549[264] = 1;
   out_8784471241999669549[265] = 0;
   out_8784471241999669549[266] = 0;
   out_8784471241999669549[267] = 0;
   out_8784471241999669549[268] = 0;
   out_8784471241999669549[269] = 0;
   out_8784471241999669549[270] = 0;
   out_8784471241999669549[271] = 0;
   out_8784471241999669549[272] = 0;
   out_8784471241999669549[273] = 0;
   out_8784471241999669549[274] = 0;
   out_8784471241999669549[275] = 0;
   out_8784471241999669549[276] = 0;
   out_8784471241999669549[277] = 0;
   out_8784471241999669549[278] = 0;
   out_8784471241999669549[279] = 0;
   out_8784471241999669549[280] = 0;
   out_8784471241999669549[281] = 0;
   out_8784471241999669549[282] = 0;
   out_8784471241999669549[283] = 0;
   out_8784471241999669549[284] = 0;
   out_8784471241999669549[285] = 0;
   out_8784471241999669549[286] = 1;
   out_8784471241999669549[287] = 0;
   out_8784471241999669549[288] = 0;
   out_8784471241999669549[289] = 0;
   out_8784471241999669549[290] = 0;
   out_8784471241999669549[291] = 0;
   out_8784471241999669549[292] = 0;
   out_8784471241999669549[293] = 0;
   out_8784471241999669549[294] = 0;
   out_8784471241999669549[295] = 0;
   out_8784471241999669549[296] = 0;
   out_8784471241999669549[297] = 0;
   out_8784471241999669549[298] = 0;
   out_8784471241999669549[299] = 0;
   out_8784471241999669549[300] = 0;
   out_8784471241999669549[301] = 0;
   out_8784471241999669549[302] = 0;
   out_8784471241999669549[303] = 0;
   out_8784471241999669549[304] = 0;
   out_8784471241999669549[305] = 0;
   out_8784471241999669549[306] = 0;
   out_8784471241999669549[307] = 0;
   out_8784471241999669549[308] = 1;
   out_8784471241999669549[309] = 0;
   out_8784471241999669549[310] = 0;
   out_8784471241999669549[311] = 0;
   out_8784471241999669549[312] = 0;
   out_8784471241999669549[313] = 0;
   out_8784471241999669549[314] = 0;
   out_8784471241999669549[315] = 0;
   out_8784471241999669549[316] = 0;
   out_8784471241999669549[317] = 0;
   out_8784471241999669549[318] = 0;
   out_8784471241999669549[319] = 0;
   out_8784471241999669549[320] = 0;
   out_8784471241999669549[321] = 0;
   out_8784471241999669549[322] = 0;
   out_8784471241999669549[323] = 0;
   out_8784471241999669549[324] = 0;
   out_8784471241999669549[325] = 0;
   out_8784471241999669549[326] = 0;
   out_8784471241999669549[327] = 0;
   out_8784471241999669549[328] = 0;
   out_8784471241999669549[329] = 0;
   out_8784471241999669549[330] = 1;
   out_8784471241999669549[331] = 0;
   out_8784471241999669549[332] = 0;
   out_8784471241999669549[333] = 0;
   out_8784471241999669549[334] = 0;
   out_8784471241999669549[335] = 0;
   out_8784471241999669549[336] = 0;
   out_8784471241999669549[337] = 0;
   out_8784471241999669549[338] = 0;
   out_8784471241999669549[339] = 0;
   out_8784471241999669549[340] = 0;
   out_8784471241999669549[341] = 0;
   out_8784471241999669549[342] = 0;
   out_8784471241999669549[343] = 0;
   out_8784471241999669549[344] = 0;
   out_8784471241999669549[345] = 0;
   out_8784471241999669549[346] = 0;
   out_8784471241999669549[347] = 0;
   out_8784471241999669549[348] = 0;
   out_8784471241999669549[349] = 0;
   out_8784471241999669549[350] = 0;
   out_8784471241999669549[351] = 0;
   out_8784471241999669549[352] = 1;
   out_8784471241999669549[353] = 0;
   out_8784471241999669549[354] = 0;
   out_8784471241999669549[355] = 0;
   out_8784471241999669549[356] = 0;
   out_8784471241999669549[357] = 0;
   out_8784471241999669549[358] = 0;
   out_8784471241999669549[359] = 0;
   out_8784471241999669549[360] = 0;
   out_8784471241999669549[361] = 0;
   out_8784471241999669549[362] = 0;
   out_8784471241999669549[363] = 0;
   out_8784471241999669549[364] = 0;
   out_8784471241999669549[365] = 0;
   out_8784471241999669549[366] = 0;
   out_8784471241999669549[367] = 0;
   out_8784471241999669549[368] = 0;
   out_8784471241999669549[369] = 0;
   out_8784471241999669549[370] = 0;
   out_8784471241999669549[371] = 0;
   out_8784471241999669549[372] = 0;
   out_8784471241999669549[373] = 0;
   out_8784471241999669549[374] = 1;
   out_8784471241999669549[375] = 0;
   out_8784471241999669549[376] = 0;
   out_8784471241999669549[377] = 0;
   out_8784471241999669549[378] = 0;
   out_8784471241999669549[379] = 0;
   out_8784471241999669549[380] = 0;
   out_8784471241999669549[381] = 0;
   out_8784471241999669549[382] = 0;
   out_8784471241999669549[383] = 0;
   out_8784471241999669549[384] = 0;
   out_8784471241999669549[385] = 0;
   out_8784471241999669549[386] = 0;
   out_8784471241999669549[387] = 0;
   out_8784471241999669549[388] = 0;
   out_8784471241999669549[389] = 0;
   out_8784471241999669549[390] = 0;
   out_8784471241999669549[391] = 0;
   out_8784471241999669549[392] = 0;
   out_8784471241999669549[393] = 0;
   out_8784471241999669549[394] = 0;
   out_8784471241999669549[395] = 0;
   out_8784471241999669549[396] = 1;
   out_8784471241999669549[397] = 0;
   out_8784471241999669549[398] = 0;
   out_8784471241999669549[399] = 0;
   out_8784471241999669549[400] = 0;
   out_8784471241999669549[401] = 0;
   out_8784471241999669549[402] = 0;
   out_8784471241999669549[403] = 0;
   out_8784471241999669549[404] = 0;
   out_8784471241999669549[405] = 0;
   out_8784471241999669549[406] = 0;
   out_8784471241999669549[407] = 0;
   out_8784471241999669549[408] = 0;
   out_8784471241999669549[409] = 0;
   out_8784471241999669549[410] = 0;
   out_8784471241999669549[411] = 0;
   out_8784471241999669549[412] = 0;
   out_8784471241999669549[413] = 0;
   out_8784471241999669549[414] = 0;
   out_8784471241999669549[415] = 0;
   out_8784471241999669549[416] = 0;
   out_8784471241999669549[417] = 0;
   out_8784471241999669549[418] = 1;
   out_8784471241999669549[419] = 0;
   out_8784471241999669549[420] = 0;
   out_8784471241999669549[421] = 0;
   out_8784471241999669549[422] = 0;
   out_8784471241999669549[423] = 0;
   out_8784471241999669549[424] = 0;
   out_8784471241999669549[425] = 0;
   out_8784471241999669549[426] = 0;
   out_8784471241999669549[427] = 0;
   out_8784471241999669549[428] = 0;
   out_8784471241999669549[429] = 0;
   out_8784471241999669549[430] = 0;
   out_8784471241999669549[431] = 0;
   out_8784471241999669549[432] = 0;
   out_8784471241999669549[433] = 0;
   out_8784471241999669549[434] = 0;
   out_8784471241999669549[435] = 0;
   out_8784471241999669549[436] = 0;
   out_8784471241999669549[437] = 0;
   out_8784471241999669549[438] = 0;
   out_8784471241999669549[439] = 0;
   out_8784471241999669549[440] = 1;
}
void h_4(double *state, double *unused, double *out_4227406610325000507) {
   out_4227406610325000507[0] = state[10] + state[13];
   out_4227406610325000507[1] = state[11] + state[14];
   out_4227406610325000507[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_536664744342837146) {
   out_536664744342837146[0] = 0;
   out_536664744342837146[1] = 0;
   out_536664744342837146[2] = 0;
   out_536664744342837146[3] = 0;
   out_536664744342837146[4] = 0;
   out_536664744342837146[5] = 0;
   out_536664744342837146[6] = 0;
   out_536664744342837146[7] = 0;
   out_536664744342837146[8] = 0;
   out_536664744342837146[9] = 0;
   out_536664744342837146[10] = 1;
   out_536664744342837146[11] = 0;
   out_536664744342837146[12] = 0;
   out_536664744342837146[13] = 1;
   out_536664744342837146[14] = 0;
   out_536664744342837146[15] = 0;
   out_536664744342837146[16] = 0;
   out_536664744342837146[17] = 0;
   out_536664744342837146[18] = 0;
   out_536664744342837146[19] = 0;
   out_536664744342837146[20] = 0;
   out_536664744342837146[21] = 0;
   out_536664744342837146[22] = 0;
   out_536664744342837146[23] = 0;
   out_536664744342837146[24] = 0;
   out_536664744342837146[25] = 0;
   out_536664744342837146[26] = 0;
   out_536664744342837146[27] = 0;
   out_536664744342837146[28] = 0;
   out_536664744342837146[29] = 0;
   out_536664744342837146[30] = 0;
   out_536664744342837146[31] = 0;
   out_536664744342837146[32] = 0;
   out_536664744342837146[33] = 1;
   out_536664744342837146[34] = 0;
   out_536664744342837146[35] = 0;
   out_536664744342837146[36] = 1;
   out_536664744342837146[37] = 0;
   out_536664744342837146[38] = 0;
   out_536664744342837146[39] = 0;
   out_536664744342837146[40] = 0;
   out_536664744342837146[41] = 0;
   out_536664744342837146[42] = 0;
   out_536664744342837146[43] = 0;
   out_536664744342837146[44] = 0;
   out_536664744342837146[45] = 0;
   out_536664744342837146[46] = 0;
   out_536664744342837146[47] = 0;
   out_536664744342837146[48] = 0;
   out_536664744342837146[49] = 0;
   out_536664744342837146[50] = 0;
   out_536664744342837146[51] = 0;
   out_536664744342837146[52] = 0;
   out_536664744342837146[53] = 0;
   out_536664744342837146[54] = 0;
   out_536664744342837146[55] = 0;
   out_536664744342837146[56] = 1;
   out_536664744342837146[57] = 0;
   out_536664744342837146[58] = 0;
   out_536664744342837146[59] = 1;
   out_536664744342837146[60] = 0;
   out_536664744342837146[61] = 0;
   out_536664744342837146[62] = 0;
   out_536664744342837146[63] = 0;
   out_536664744342837146[64] = 0;
   out_536664744342837146[65] = 0;
}
void h_9(double *state, double *unused, double *out_1214526371738644518) {
   out_1214526371738644518[0] = state[10];
   out_1214526371738644518[1] = state[11];
   out_1214526371738644518[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6750554190921610324) {
   out_6750554190921610324[0] = 0;
   out_6750554190921610324[1] = 0;
   out_6750554190921610324[2] = 0;
   out_6750554190921610324[3] = 0;
   out_6750554190921610324[4] = 0;
   out_6750554190921610324[5] = 0;
   out_6750554190921610324[6] = 0;
   out_6750554190921610324[7] = 0;
   out_6750554190921610324[8] = 0;
   out_6750554190921610324[9] = 0;
   out_6750554190921610324[10] = 1;
   out_6750554190921610324[11] = 0;
   out_6750554190921610324[12] = 0;
   out_6750554190921610324[13] = 0;
   out_6750554190921610324[14] = 0;
   out_6750554190921610324[15] = 0;
   out_6750554190921610324[16] = 0;
   out_6750554190921610324[17] = 0;
   out_6750554190921610324[18] = 0;
   out_6750554190921610324[19] = 0;
   out_6750554190921610324[20] = 0;
   out_6750554190921610324[21] = 0;
   out_6750554190921610324[22] = 0;
   out_6750554190921610324[23] = 0;
   out_6750554190921610324[24] = 0;
   out_6750554190921610324[25] = 0;
   out_6750554190921610324[26] = 0;
   out_6750554190921610324[27] = 0;
   out_6750554190921610324[28] = 0;
   out_6750554190921610324[29] = 0;
   out_6750554190921610324[30] = 0;
   out_6750554190921610324[31] = 0;
   out_6750554190921610324[32] = 0;
   out_6750554190921610324[33] = 1;
   out_6750554190921610324[34] = 0;
   out_6750554190921610324[35] = 0;
   out_6750554190921610324[36] = 0;
   out_6750554190921610324[37] = 0;
   out_6750554190921610324[38] = 0;
   out_6750554190921610324[39] = 0;
   out_6750554190921610324[40] = 0;
   out_6750554190921610324[41] = 0;
   out_6750554190921610324[42] = 0;
   out_6750554190921610324[43] = 0;
   out_6750554190921610324[44] = 0;
   out_6750554190921610324[45] = 0;
   out_6750554190921610324[46] = 0;
   out_6750554190921610324[47] = 0;
   out_6750554190921610324[48] = 0;
   out_6750554190921610324[49] = 0;
   out_6750554190921610324[50] = 0;
   out_6750554190921610324[51] = 0;
   out_6750554190921610324[52] = 0;
   out_6750554190921610324[53] = 0;
   out_6750554190921610324[54] = 0;
   out_6750554190921610324[55] = 0;
   out_6750554190921610324[56] = 1;
   out_6750554190921610324[57] = 0;
   out_6750554190921610324[58] = 0;
   out_6750554190921610324[59] = 0;
   out_6750554190921610324[60] = 0;
   out_6750554190921610324[61] = 0;
   out_6750554190921610324[62] = 0;
   out_6750554190921610324[63] = 0;
   out_6750554190921610324[64] = 0;
   out_6750554190921610324[65] = 0;
}
void h_10(double *state, double *unused, double *out_6497611180128088395) {
   out_6497611180128088395[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6497611180128088395[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6497611180128088395[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6689006730597112935) {
   out_6689006730597112935[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6689006730597112935[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6689006730597112935[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6689006730597112935[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6689006730597112935[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6689006730597112935[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6689006730597112935[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6689006730597112935[7] = 0;
   out_6689006730597112935[8] = 0;
   out_6689006730597112935[9] = 0;
   out_6689006730597112935[10] = 0;
   out_6689006730597112935[11] = 0;
   out_6689006730597112935[12] = 0;
   out_6689006730597112935[13] = 0;
   out_6689006730597112935[14] = 0;
   out_6689006730597112935[15] = 0;
   out_6689006730597112935[16] = 1;
   out_6689006730597112935[17] = 0;
   out_6689006730597112935[18] = 0;
   out_6689006730597112935[19] = 1;
   out_6689006730597112935[20] = 0;
   out_6689006730597112935[21] = 0;
   out_6689006730597112935[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6689006730597112935[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6689006730597112935[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6689006730597112935[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6689006730597112935[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6689006730597112935[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6689006730597112935[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6689006730597112935[29] = 0;
   out_6689006730597112935[30] = 0;
   out_6689006730597112935[31] = 0;
   out_6689006730597112935[32] = 0;
   out_6689006730597112935[33] = 0;
   out_6689006730597112935[34] = 0;
   out_6689006730597112935[35] = 0;
   out_6689006730597112935[36] = 0;
   out_6689006730597112935[37] = 0;
   out_6689006730597112935[38] = 0;
   out_6689006730597112935[39] = 1;
   out_6689006730597112935[40] = 0;
   out_6689006730597112935[41] = 0;
   out_6689006730597112935[42] = 1;
   out_6689006730597112935[43] = 0;
   out_6689006730597112935[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6689006730597112935[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6689006730597112935[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6689006730597112935[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6689006730597112935[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6689006730597112935[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6689006730597112935[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6689006730597112935[51] = 0;
   out_6689006730597112935[52] = 0;
   out_6689006730597112935[53] = 0;
   out_6689006730597112935[54] = 0;
   out_6689006730597112935[55] = 0;
   out_6689006730597112935[56] = 0;
   out_6689006730597112935[57] = 0;
   out_6689006730597112935[58] = 0;
   out_6689006730597112935[59] = 0;
   out_6689006730597112935[60] = 0;
   out_6689006730597112935[61] = 0;
   out_6689006730597112935[62] = 1;
   out_6689006730597112935[63] = 0;
   out_6689006730597112935[64] = 0;
   out_6689006730597112935[65] = 1;
}
void h_12(double *state, double *unused, double *out_8062157107846117300) {
   out_8062157107846117300[0] = state[0];
   out_8062157107846117300[1] = state[1];
   out_8062157107846117300[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7130463569339613346) {
   out_7130463569339613346[0] = 1;
   out_7130463569339613346[1] = 0;
   out_7130463569339613346[2] = 0;
   out_7130463569339613346[3] = 0;
   out_7130463569339613346[4] = 0;
   out_7130463569339613346[5] = 0;
   out_7130463569339613346[6] = 0;
   out_7130463569339613346[7] = 0;
   out_7130463569339613346[8] = 0;
   out_7130463569339613346[9] = 0;
   out_7130463569339613346[10] = 0;
   out_7130463569339613346[11] = 0;
   out_7130463569339613346[12] = 0;
   out_7130463569339613346[13] = 0;
   out_7130463569339613346[14] = 0;
   out_7130463569339613346[15] = 0;
   out_7130463569339613346[16] = 0;
   out_7130463569339613346[17] = 0;
   out_7130463569339613346[18] = 0;
   out_7130463569339613346[19] = 0;
   out_7130463569339613346[20] = 0;
   out_7130463569339613346[21] = 0;
   out_7130463569339613346[22] = 0;
   out_7130463569339613346[23] = 1;
   out_7130463569339613346[24] = 0;
   out_7130463569339613346[25] = 0;
   out_7130463569339613346[26] = 0;
   out_7130463569339613346[27] = 0;
   out_7130463569339613346[28] = 0;
   out_7130463569339613346[29] = 0;
   out_7130463569339613346[30] = 0;
   out_7130463569339613346[31] = 0;
   out_7130463569339613346[32] = 0;
   out_7130463569339613346[33] = 0;
   out_7130463569339613346[34] = 0;
   out_7130463569339613346[35] = 0;
   out_7130463569339613346[36] = 0;
   out_7130463569339613346[37] = 0;
   out_7130463569339613346[38] = 0;
   out_7130463569339613346[39] = 0;
   out_7130463569339613346[40] = 0;
   out_7130463569339613346[41] = 0;
   out_7130463569339613346[42] = 0;
   out_7130463569339613346[43] = 0;
   out_7130463569339613346[44] = 0;
   out_7130463569339613346[45] = 0;
   out_7130463569339613346[46] = 1;
   out_7130463569339613346[47] = 0;
   out_7130463569339613346[48] = 0;
   out_7130463569339613346[49] = 0;
   out_7130463569339613346[50] = 0;
   out_7130463569339613346[51] = 0;
   out_7130463569339613346[52] = 0;
   out_7130463569339613346[53] = 0;
   out_7130463569339613346[54] = 0;
   out_7130463569339613346[55] = 0;
   out_7130463569339613346[56] = 0;
   out_7130463569339613346[57] = 0;
   out_7130463569339613346[58] = 0;
   out_7130463569339613346[59] = 0;
   out_7130463569339613346[60] = 0;
   out_7130463569339613346[61] = 0;
   out_7130463569339613346[62] = 0;
   out_7130463569339613346[63] = 0;
   out_7130463569339613346[64] = 0;
   out_7130463569339613346[65] = 0;
}
void h_35(double *state, double *unused, double *out_6913039161023487124) {
   out_6913039161023487124[0] = state[7];
   out_6913039161023487124[1] = state[8];
   out_6913039161023487124[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8570717472044924561) {
   out_8570717472044924561[0] = 0;
   out_8570717472044924561[1] = 0;
   out_8570717472044924561[2] = 0;
   out_8570717472044924561[3] = 0;
   out_8570717472044924561[4] = 0;
   out_8570717472044924561[5] = 0;
   out_8570717472044924561[6] = 0;
   out_8570717472044924561[7] = 1;
   out_8570717472044924561[8] = 0;
   out_8570717472044924561[9] = 0;
   out_8570717472044924561[10] = 0;
   out_8570717472044924561[11] = 0;
   out_8570717472044924561[12] = 0;
   out_8570717472044924561[13] = 0;
   out_8570717472044924561[14] = 0;
   out_8570717472044924561[15] = 0;
   out_8570717472044924561[16] = 0;
   out_8570717472044924561[17] = 0;
   out_8570717472044924561[18] = 0;
   out_8570717472044924561[19] = 0;
   out_8570717472044924561[20] = 0;
   out_8570717472044924561[21] = 0;
   out_8570717472044924561[22] = 0;
   out_8570717472044924561[23] = 0;
   out_8570717472044924561[24] = 0;
   out_8570717472044924561[25] = 0;
   out_8570717472044924561[26] = 0;
   out_8570717472044924561[27] = 0;
   out_8570717472044924561[28] = 0;
   out_8570717472044924561[29] = 0;
   out_8570717472044924561[30] = 1;
   out_8570717472044924561[31] = 0;
   out_8570717472044924561[32] = 0;
   out_8570717472044924561[33] = 0;
   out_8570717472044924561[34] = 0;
   out_8570717472044924561[35] = 0;
   out_8570717472044924561[36] = 0;
   out_8570717472044924561[37] = 0;
   out_8570717472044924561[38] = 0;
   out_8570717472044924561[39] = 0;
   out_8570717472044924561[40] = 0;
   out_8570717472044924561[41] = 0;
   out_8570717472044924561[42] = 0;
   out_8570717472044924561[43] = 0;
   out_8570717472044924561[44] = 0;
   out_8570717472044924561[45] = 0;
   out_8570717472044924561[46] = 0;
   out_8570717472044924561[47] = 0;
   out_8570717472044924561[48] = 0;
   out_8570717472044924561[49] = 0;
   out_8570717472044924561[50] = 0;
   out_8570717472044924561[51] = 0;
   out_8570717472044924561[52] = 0;
   out_8570717472044924561[53] = 1;
   out_8570717472044924561[54] = 0;
   out_8570717472044924561[55] = 0;
   out_8570717472044924561[56] = 0;
   out_8570717472044924561[57] = 0;
   out_8570717472044924561[58] = 0;
   out_8570717472044924561[59] = 0;
   out_8570717472044924561[60] = 0;
   out_8570717472044924561[61] = 0;
   out_8570717472044924561[62] = 0;
   out_8570717472044924561[63] = 0;
   out_8570717472044924561[64] = 0;
   out_8570717472044924561[65] = 0;
}
void h_32(double *state, double *unused, double *out_2862990461008711013) {
   out_2862990461008711013[0] = state[3];
   out_2862990461008711013[1] = state[4];
   out_2862990461008711013[2] = state[5];
   out_2862990461008711013[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2961162097970510699) {
   out_2961162097970510699[0] = 0;
   out_2961162097970510699[1] = 0;
   out_2961162097970510699[2] = 0;
   out_2961162097970510699[3] = 1;
   out_2961162097970510699[4] = 0;
   out_2961162097970510699[5] = 0;
   out_2961162097970510699[6] = 0;
   out_2961162097970510699[7] = 0;
   out_2961162097970510699[8] = 0;
   out_2961162097970510699[9] = 0;
   out_2961162097970510699[10] = 0;
   out_2961162097970510699[11] = 0;
   out_2961162097970510699[12] = 0;
   out_2961162097970510699[13] = 0;
   out_2961162097970510699[14] = 0;
   out_2961162097970510699[15] = 0;
   out_2961162097970510699[16] = 0;
   out_2961162097970510699[17] = 0;
   out_2961162097970510699[18] = 0;
   out_2961162097970510699[19] = 0;
   out_2961162097970510699[20] = 0;
   out_2961162097970510699[21] = 0;
   out_2961162097970510699[22] = 0;
   out_2961162097970510699[23] = 0;
   out_2961162097970510699[24] = 0;
   out_2961162097970510699[25] = 0;
   out_2961162097970510699[26] = 1;
   out_2961162097970510699[27] = 0;
   out_2961162097970510699[28] = 0;
   out_2961162097970510699[29] = 0;
   out_2961162097970510699[30] = 0;
   out_2961162097970510699[31] = 0;
   out_2961162097970510699[32] = 0;
   out_2961162097970510699[33] = 0;
   out_2961162097970510699[34] = 0;
   out_2961162097970510699[35] = 0;
   out_2961162097970510699[36] = 0;
   out_2961162097970510699[37] = 0;
   out_2961162097970510699[38] = 0;
   out_2961162097970510699[39] = 0;
   out_2961162097970510699[40] = 0;
   out_2961162097970510699[41] = 0;
   out_2961162097970510699[42] = 0;
   out_2961162097970510699[43] = 0;
   out_2961162097970510699[44] = 0;
   out_2961162097970510699[45] = 0;
   out_2961162097970510699[46] = 0;
   out_2961162097970510699[47] = 0;
   out_2961162097970510699[48] = 0;
   out_2961162097970510699[49] = 1;
   out_2961162097970510699[50] = 0;
   out_2961162097970510699[51] = 0;
   out_2961162097970510699[52] = 0;
   out_2961162097970510699[53] = 0;
   out_2961162097970510699[54] = 0;
   out_2961162097970510699[55] = 0;
   out_2961162097970510699[56] = 0;
   out_2961162097970510699[57] = 0;
   out_2961162097970510699[58] = 0;
   out_2961162097970510699[59] = 0;
   out_2961162097970510699[60] = 0;
   out_2961162097970510699[61] = 0;
   out_2961162097970510699[62] = 0;
   out_2961162097970510699[63] = 0;
   out_2961162097970510699[64] = 0;
   out_2961162097970510699[65] = 0;
   out_2961162097970510699[66] = 0;
   out_2961162097970510699[67] = 0;
   out_2961162097970510699[68] = 0;
   out_2961162097970510699[69] = 0;
   out_2961162097970510699[70] = 0;
   out_2961162097970510699[71] = 0;
   out_2961162097970510699[72] = 1;
   out_2961162097970510699[73] = 0;
   out_2961162097970510699[74] = 0;
   out_2961162097970510699[75] = 0;
   out_2961162097970510699[76] = 0;
   out_2961162097970510699[77] = 0;
   out_2961162097970510699[78] = 0;
   out_2961162097970510699[79] = 0;
   out_2961162097970510699[80] = 0;
   out_2961162097970510699[81] = 0;
   out_2961162097970510699[82] = 0;
   out_2961162097970510699[83] = 0;
   out_2961162097970510699[84] = 0;
   out_2961162097970510699[85] = 0;
   out_2961162097970510699[86] = 0;
   out_2961162097970510699[87] = 0;
}
void h_13(double *state, double *unused, double *out_7204966353320088844) {
   out_7204966353320088844[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7204966353320088844[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7204966353320088844[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7539104421654297247) {
   out_7539104421654297247[0] = 0;
   out_7539104421654297247[1] = 0;
   out_7539104421654297247[2] = 0;
   out_7539104421654297247[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7539104421654297247[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7539104421654297247[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7539104421654297247[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7539104421654297247[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7539104421654297247[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7539104421654297247[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7539104421654297247[10] = 0;
   out_7539104421654297247[11] = 0;
   out_7539104421654297247[12] = 0;
   out_7539104421654297247[13] = 0;
   out_7539104421654297247[14] = 0;
   out_7539104421654297247[15] = 0;
   out_7539104421654297247[16] = 0;
   out_7539104421654297247[17] = 0;
   out_7539104421654297247[18] = 0;
   out_7539104421654297247[19] = 0;
   out_7539104421654297247[20] = 0;
   out_7539104421654297247[21] = 0;
   out_7539104421654297247[22] = 0;
   out_7539104421654297247[23] = 0;
   out_7539104421654297247[24] = 0;
   out_7539104421654297247[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7539104421654297247[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7539104421654297247[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7539104421654297247[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7539104421654297247[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7539104421654297247[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7539104421654297247[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7539104421654297247[32] = 0;
   out_7539104421654297247[33] = 0;
   out_7539104421654297247[34] = 0;
   out_7539104421654297247[35] = 0;
   out_7539104421654297247[36] = 0;
   out_7539104421654297247[37] = 0;
   out_7539104421654297247[38] = 0;
   out_7539104421654297247[39] = 0;
   out_7539104421654297247[40] = 0;
   out_7539104421654297247[41] = 0;
   out_7539104421654297247[42] = 0;
   out_7539104421654297247[43] = 0;
   out_7539104421654297247[44] = 0;
   out_7539104421654297247[45] = 0;
   out_7539104421654297247[46] = 0;
   out_7539104421654297247[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7539104421654297247[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7539104421654297247[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7539104421654297247[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7539104421654297247[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7539104421654297247[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7539104421654297247[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7539104421654297247[54] = 0;
   out_7539104421654297247[55] = 0;
   out_7539104421654297247[56] = 0;
   out_7539104421654297247[57] = 0;
   out_7539104421654297247[58] = 0;
   out_7539104421654297247[59] = 0;
   out_7539104421654297247[60] = 0;
   out_7539104421654297247[61] = 0;
   out_7539104421654297247[62] = 0;
   out_7539104421654297247[63] = 0;
   out_7539104421654297247[64] = 0;
   out_7539104421654297247[65] = 0;
}
void h_14(double *state, double *unused, double *out_1214526371738644518) {
   out_1214526371738644518[0] = state[10];
   out_1214526371738644518[1] = state[11];
   out_1214526371738644518[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6750554190921610324) {
   out_6750554190921610324[0] = 0;
   out_6750554190921610324[1] = 0;
   out_6750554190921610324[2] = 0;
   out_6750554190921610324[3] = 0;
   out_6750554190921610324[4] = 0;
   out_6750554190921610324[5] = 0;
   out_6750554190921610324[6] = 0;
   out_6750554190921610324[7] = 0;
   out_6750554190921610324[8] = 0;
   out_6750554190921610324[9] = 0;
   out_6750554190921610324[10] = 1;
   out_6750554190921610324[11] = 0;
   out_6750554190921610324[12] = 0;
   out_6750554190921610324[13] = 0;
   out_6750554190921610324[14] = 0;
   out_6750554190921610324[15] = 0;
   out_6750554190921610324[16] = 0;
   out_6750554190921610324[17] = 0;
   out_6750554190921610324[18] = 0;
   out_6750554190921610324[19] = 0;
   out_6750554190921610324[20] = 0;
   out_6750554190921610324[21] = 0;
   out_6750554190921610324[22] = 0;
   out_6750554190921610324[23] = 0;
   out_6750554190921610324[24] = 0;
   out_6750554190921610324[25] = 0;
   out_6750554190921610324[26] = 0;
   out_6750554190921610324[27] = 0;
   out_6750554190921610324[28] = 0;
   out_6750554190921610324[29] = 0;
   out_6750554190921610324[30] = 0;
   out_6750554190921610324[31] = 0;
   out_6750554190921610324[32] = 0;
   out_6750554190921610324[33] = 1;
   out_6750554190921610324[34] = 0;
   out_6750554190921610324[35] = 0;
   out_6750554190921610324[36] = 0;
   out_6750554190921610324[37] = 0;
   out_6750554190921610324[38] = 0;
   out_6750554190921610324[39] = 0;
   out_6750554190921610324[40] = 0;
   out_6750554190921610324[41] = 0;
   out_6750554190921610324[42] = 0;
   out_6750554190921610324[43] = 0;
   out_6750554190921610324[44] = 0;
   out_6750554190921610324[45] = 0;
   out_6750554190921610324[46] = 0;
   out_6750554190921610324[47] = 0;
   out_6750554190921610324[48] = 0;
   out_6750554190921610324[49] = 0;
   out_6750554190921610324[50] = 0;
   out_6750554190921610324[51] = 0;
   out_6750554190921610324[52] = 0;
   out_6750554190921610324[53] = 0;
   out_6750554190921610324[54] = 0;
   out_6750554190921610324[55] = 0;
   out_6750554190921610324[56] = 1;
   out_6750554190921610324[57] = 0;
   out_6750554190921610324[58] = 0;
   out_6750554190921610324[59] = 0;
   out_6750554190921610324[60] = 0;
   out_6750554190921610324[61] = 0;
   out_6750554190921610324[62] = 0;
   out_6750554190921610324[63] = 0;
   out_6750554190921610324[64] = 0;
   out_6750554190921610324[65] = 0;
}
void h_33(double *state, double *unused, double *out_3182937775845598389) {
   out_3182937775845598389[0] = state[16];
   out_3182937775845598389[1] = state[17];
   out_3182937775845598389[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5420160467406066957) {
   out_5420160467406066957[0] = 0;
   out_5420160467406066957[1] = 0;
   out_5420160467406066957[2] = 0;
   out_5420160467406066957[3] = 0;
   out_5420160467406066957[4] = 0;
   out_5420160467406066957[5] = 0;
   out_5420160467406066957[6] = 0;
   out_5420160467406066957[7] = 0;
   out_5420160467406066957[8] = 0;
   out_5420160467406066957[9] = 0;
   out_5420160467406066957[10] = 0;
   out_5420160467406066957[11] = 0;
   out_5420160467406066957[12] = 0;
   out_5420160467406066957[13] = 0;
   out_5420160467406066957[14] = 0;
   out_5420160467406066957[15] = 0;
   out_5420160467406066957[16] = 1;
   out_5420160467406066957[17] = 0;
   out_5420160467406066957[18] = 0;
   out_5420160467406066957[19] = 0;
   out_5420160467406066957[20] = 0;
   out_5420160467406066957[21] = 0;
   out_5420160467406066957[22] = 0;
   out_5420160467406066957[23] = 0;
   out_5420160467406066957[24] = 0;
   out_5420160467406066957[25] = 0;
   out_5420160467406066957[26] = 0;
   out_5420160467406066957[27] = 0;
   out_5420160467406066957[28] = 0;
   out_5420160467406066957[29] = 0;
   out_5420160467406066957[30] = 0;
   out_5420160467406066957[31] = 0;
   out_5420160467406066957[32] = 0;
   out_5420160467406066957[33] = 0;
   out_5420160467406066957[34] = 0;
   out_5420160467406066957[35] = 0;
   out_5420160467406066957[36] = 0;
   out_5420160467406066957[37] = 0;
   out_5420160467406066957[38] = 0;
   out_5420160467406066957[39] = 1;
   out_5420160467406066957[40] = 0;
   out_5420160467406066957[41] = 0;
   out_5420160467406066957[42] = 0;
   out_5420160467406066957[43] = 0;
   out_5420160467406066957[44] = 0;
   out_5420160467406066957[45] = 0;
   out_5420160467406066957[46] = 0;
   out_5420160467406066957[47] = 0;
   out_5420160467406066957[48] = 0;
   out_5420160467406066957[49] = 0;
   out_5420160467406066957[50] = 0;
   out_5420160467406066957[51] = 0;
   out_5420160467406066957[52] = 0;
   out_5420160467406066957[53] = 0;
   out_5420160467406066957[54] = 0;
   out_5420160467406066957[55] = 0;
   out_5420160467406066957[56] = 0;
   out_5420160467406066957[57] = 0;
   out_5420160467406066957[58] = 0;
   out_5420160467406066957[59] = 0;
   out_5420160467406066957[60] = 0;
   out_5420160467406066957[61] = 0;
   out_5420160467406066957[62] = 1;
   out_5420160467406066957[63] = 0;
   out_5420160467406066957[64] = 0;
   out_5420160467406066957[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5649736723393595680) {
  H(in_vec, out_5649736723393595680);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1817682482156157428) {
  err_fun(nom_x, delta_x, out_1817682482156157428);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2063642465723510922) {
  inv_err_fun(nom_x, true_x, out_2063642465723510922);
}
void live_H_mod_fun(double *state, double *out_8875414428119132416) {
  H_mod_fun(state, out_8875414428119132416);
}
void live_f_fun(double *state, double dt, double *out_4816933065227157419) {
  f_fun(state,  dt, out_4816933065227157419);
}
void live_F_fun(double *state, double dt, double *out_8784471241999669549) {
  F_fun(state,  dt, out_8784471241999669549);
}
void live_h_4(double *state, double *unused, double *out_4227406610325000507) {
  h_4(state, unused, out_4227406610325000507);
}
void live_H_4(double *state, double *unused, double *out_536664744342837146) {
  H_4(state, unused, out_536664744342837146);
}
void live_h_9(double *state, double *unused, double *out_1214526371738644518) {
  h_9(state, unused, out_1214526371738644518);
}
void live_H_9(double *state, double *unused, double *out_6750554190921610324) {
  H_9(state, unused, out_6750554190921610324);
}
void live_h_10(double *state, double *unused, double *out_6497611180128088395) {
  h_10(state, unused, out_6497611180128088395);
}
void live_H_10(double *state, double *unused, double *out_6689006730597112935) {
  H_10(state, unused, out_6689006730597112935);
}
void live_h_12(double *state, double *unused, double *out_8062157107846117300) {
  h_12(state, unused, out_8062157107846117300);
}
void live_H_12(double *state, double *unused, double *out_7130463569339613346) {
  H_12(state, unused, out_7130463569339613346);
}
void live_h_35(double *state, double *unused, double *out_6913039161023487124) {
  h_35(state, unused, out_6913039161023487124);
}
void live_H_35(double *state, double *unused, double *out_8570717472044924561) {
  H_35(state, unused, out_8570717472044924561);
}
void live_h_32(double *state, double *unused, double *out_2862990461008711013) {
  h_32(state, unused, out_2862990461008711013);
}
void live_H_32(double *state, double *unused, double *out_2961162097970510699) {
  H_32(state, unused, out_2961162097970510699);
}
void live_h_13(double *state, double *unused, double *out_7204966353320088844) {
  h_13(state, unused, out_7204966353320088844);
}
void live_H_13(double *state, double *unused, double *out_7539104421654297247) {
  H_13(state, unused, out_7539104421654297247);
}
void live_h_14(double *state, double *unused, double *out_1214526371738644518) {
  h_14(state, unused, out_1214526371738644518);
}
void live_H_14(double *state, double *unused, double *out_6750554190921610324) {
  H_14(state, unused, out_6750554190921610324);
}
void live_h_33(double *state, double *unused, double *out_3182937775845598389) {
  h_33(state, unused, out_3182937775845598389);
}
void live_H_33(double *state, double *unused, double *out_5420160467406066957) {
  H_33(state, unused, out_5420160467406066957);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
